#TESTCOMMAND: mppl -w
# Recursive MPPL macro example, contributed by L. LoDestro
#
# Repeat(low,high,increment,[[macroname]]),  where macroname
# will be called with 1 argument = loop index.   [[..]]'s are necessary.
# If macroname expands to text with commas in it, its def also needs [[..]].
# (Known bug (expands wrong): if macro macroname has unbalanced right paren.)
# To repeat without linebreaks, elim 2nd linebreak in define( Repeat0.
define(Repeat0,[ifelse(i_mppl,
   Evaluate($1+$2),,$3(i_mppl) define([i_mppl],Evaluate(i_mppl+$2))
   [Repeat0($1,$2,[$3])] )])
define(Repeat,[define(i_mppl,$1)Repeat0(Evaluate((($2-$1)/$3)*$3+$1),
   $3,$4)Undefine([i_mppl])])

#############################################################################
# Example usage
#/CNTROL/eqvartox SET n VARIABLES IN THE eq PACKAGE TO THE VALUES IN x
#
      subroutine eqvartox( n, x)

#Use(Vxpointers) (Expansion of Basis groups was omitted for this example.)
#Use(PFCoils)

define NVI 10
define(Setvxi,[if( inonc== $1 ) then
                  vxi$1 = x(in)
                  go to 200
               endif ])
      real x(*)

      inonc = 0
      do in=1, n
         inonc = inonc+1
         Repeat(1,NVI,1,[[Setvxi]])
 200     continue
      enddo

      return
      end
